name: Rust

on:
  release:
    types: [published]
  push:
    branches: [ updates ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-test:
    runs-on: ubuntu-20.04
    steps:
      - name: Rust Nightly
        run: |
          rustup toolchain install nightly
          rustup default nightly
      - uses: actions/checkout@v2
      - name: Cache Rust dependencies
        uses: actions/cache@v1.0.1
        with:
          path: target
          key: ${{ runner.OS }}-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
  # TODO: We probably want to do this for releases in the future
  build-container-image:
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build container image
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: subspace/subspace-core-rust/subspace
          tag_with_ref: true
